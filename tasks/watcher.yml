---
- block:
    - name: Upload the watcher path systemd template
      template:
        src: "../templates/etc/systemd/system/etc-resolv-conf-watcher.path.j2"
        dest: "/etc/systemd/system/etc-resolv-conf-watcher.path"
        mode: '0644'
      when: enable_resolv_conf_watcher
      register: path_template_result

    - name: Upload the watcher service systemd template
      template:
        src: "../templates/etc/systemd/system/etc-resolv-conf-watcher.service.j2"
        dest: "/etc/systemd/system/etc-resolv-conf-watcher.service"
        mode: '0644'
      when: enable_resolv_conf_watcher
      register: service_template_result

    - name: Enable the watcher path
      systemd:
        name: etc-resolv-conf-watcher.path
        state: '{{ enable_resolv_conf_watcher | ternary("started", "stopped") }}'
        enabled: '{{ enable_resolv_conf_watcher | ternary("true", "false") }}'
        daemon_reload: yes
      when: enable_resolv_conf_watcher
        and path_template_result is defined
        and path_template_result.changed

    - name: Enable the watcher service
      systemd:
        name: etc-resolv-conf-watcher.service
        state: started
        enabled: yes
        daemon_reload: yes
      when: enable_resolv_conf_watcher
        and service_template_result is defined
        and service_template_result.changed
  when:
    enable_resolv_conf_watcher is true

- block:

    - name: Disable services if enabled
      shell: if systemctl is-enabled --quiet {{ item }}; then systemctl disable {{ item }} && echo disable_ok ; fi
      register: output
      changed_when: "'disable_ok' in output.stdout"
      loop:
        - etc-resolv-conf-watcher.path

    - name: Remove watcher templates if exists
      file:
        path: /etc/systemd/system/etc-resolv-conf-watcher.path
        state: absent

    - name: Remove watcher service if exists
      file:
        path: /etc/systemd/system/etc-resolv-conf-watcher.service
        state: absent
  when:
    enable_resolv_conf_watcher is false
